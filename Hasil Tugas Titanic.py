# -*- coding: utf-8 -*-
"""Tugas Titanic FIX

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mZHlbyGM75NAomcjD16Sl5hzZAtJ5a2B

## Investigasi sampel data titanic berikut dengan cara :
1. Cek secara head, tail, sample, info lalu observasi apa yang bisa anda peroleh ?
2. Lakukan Statistical Summary dengan mengekstrak informasi yang didapat dari observasi anda ?
3. Cek apakah ada duplikat dan bagaimana handlenya ?
4. Cek apakah ada missing value, berapa persentasenya jika ada, dan bagaimana cara handlenya ?

## Import Libraries
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
pd.set_option("display.max_columns", None)
pd.set_option("display.max_rows", None)

"""##Load Data"""

#import data
import pandas as pd

df=pd.read_excel('titanic.xlsx')
data = df.copy()

"""##Preliminary"""

# Menampilkan 5 data teratas
data.head()

# Menampilkan 5 data terbawah
data.tail()

# Menampilkan 5 random sampel dari data
data.sample(5)

#Menampilkan info dari data
data.info()

"""##Statistical Summary




"""

#Melihat kolom apa saja yang ada pada excel
data.columns

#Mengelompokkan data jenis kategori dan numerik
categoricals=['name','sex']
numericals=['survived','age']

#Menampilkan statistical summary dari data numerik
data[numericals].describe()

#Menampilkan categorical summary dari data kategori
data[categoricals].describe()

#Menampilkan detail dari data numerik
for col in numericals:
  print(data[col].value_counts())

#Menampilkan detail dari data kategori
for col in categoricals:
  print(data[col].value_counts())



"""##Data Cleansing

Duplicated Data
"""

len(data)

# Memeriksa apakah ada duplikasi
print(df.duplicated().sum())

duplicates=data[data.duplicated(keep=False)]
duplicates

# Menghapus baris duplikasi
df = df.drop_duplicates()

# Memastikan duplikasi telah dihapus
print(df.duplicated().sum())

"""Handling Duplicates"""

dup_count = duplicates.groupby(list(data.columns)).size().reset_index(name = "duplicates count")

sorted_duplicates=dup_count.sort_values(by = ['duplicates count'], ascending = False)

sorted_duplicates

data = data.drop_duplicates()

len(data)

"""Null Values"""

#Melihat Jumlah Value null untuk setiap kolom
data.isna().sum()

"""Fill Null Values"""

print(data['age'].dtype)
print(data['age'].median())

#  Mengisi nilai yang hilang dengan median

for column in data.select_dtypes(include=['number']).columns:
    data[column] = data[column].fillna(data[column].median())

# Menghapus baris dengan nilai yang hilang
df = df.dropna()

# - Menghapus kolom dengan nilai yang hilang
df = df.dropna(axis=1)

#Melihat Jumlah Value null untuk setiap kolom
data.isna().sum()

"""##Info Data Final"""

#Menampilkan info data setelah proses handling duplicates
data.info()

"""##VISUALISASI DATA"""

import matplotlib.pyplot as plt
import seaborn as sns
sns.set_theme(style="whitegrid")
plt.figure(figsize=(8, 5))
ax = data['sex'].value_counts().plot( kind='bar', color=sns.color_palette("pastel"),edgecolor='black')
plt.title("Jumlah Penumpang Berdasarkan Jenis Kelamin", fontsize=14, fontweight='bold')
plt.xlabel("Jenis Kelamin", fontsize=12)
plt.ylabel("Jumlah Penumpang", fontsize=12)
for bar in ax.patches:ax.annotate(f'{bar.get_height()}',(bar.get_x() + bar.get_width() / 2, bar.get_height()),ha='center',va='bottom', fontsize=10, color='black')
plt.tight_layout()
plt.show()



import matplotlib.pyplot as plt
import seaborn as sns
sns.set_theme(style="whitegrid")
plt.figure(figsize=(8, 5))
plt.hist(data['age'], bins=20, color=sns.color_palette("husl", 1)[0], edgecolor='black', alpha=0.8)
plt.title("Distribusi Umur Penumpang", fontsize=14, fontweight='bold')
plt.xlabel("Umur (tahun)", fontsize=12)
plt.ylabel("Jumlah Penumpang", fontsize=12)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

plt.figure(figsize=(6,4))
plt.scatter(data['age'], data['survived'], alpha= 0.6, c=data['survived'])
plt.title("Persebaran Umur dan Status Hidup")
plt.xlabel("Umur")
plt.ylabel("Status hidup (0 = tidak, 1 = hidup)")
plt.yticks([0,1])
plt.tight_layout()
plt.show()



import matplotlib.pyplot as plt
import seaborn as sns

sns.set_theme(style="whitegrid")
plt.figure(figsize=(8, 5))
ax = data.groupby('sex')['survived'].mean().plot(
    kind='bar',
    color=sns.color_palette("pastel"),
    edgecolor='black'
)
plt.title("Rata-rata Keberlangsungan Hidup Berdasarkan Jenis Kelamin", fontsize=14, fontweight='bold')
plt.xlabel("Jenis Kelamin", fontsize=12)
plt.ylabel("Rata-rata Survive", fontsize=12)
for bar in ax.patches:
    ax.annotate(f'{bar.get_height():.2f}',
                (bar.get_x() + bar.get_width() / 2, bar.get_height()),
                ha='center', va='bottom', fontsize=10)
plt.tight_layout()
plt.show()



# Menyimpan data ke file CSV
df.to_csv('hasil_analisis_titanic.csv', index=False)

# Menyimpan data ke file Excel
df.to_excel('hasil_analisis_titanic.xlsx', index=False)